/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/mouse.h>
#include "italian.keycodes"

&mt {
   //  flavor = "tap-preferred";
   // tapping_term_ms = <200>;
};

#define SK(KEY) &nk KEY KEY
// Keep sticky keys active for a long time so they effectively do not time out
#define STICKY_KEY_TIMEOUT 60000

&sk {
  release-after-ms = <STICKY_KEY_TIMEOUT>;
};

&caps_word {
  continue-list = <UNDERSCORE MINUS BACKSPACE>;
}; 



/* KEY POSITIONS
  ╭───────────────────────╮          ╭───────────────────────╮
  │          0   1   2  3 │          │  4   5   6   7        │
  │  8   9  10  11  12 13 │          │ 14  15  16  17  18  19│
  │     20  21  22  23 24  ───╮ ╭────  25  26  27  28  29    │
  ╰─────────────────╮  30  31 │ │ 32  33 ╭───────────────────╯
                    ╰─────────╯ ╰────────╯           
*/

&mt {
  //  flavor = "tap-preferred";
   // tapping_term_ms = <200>;
};

// Layer definitions
    #define BASE 0
    #define SYM 1
    #define EXT 2
    #define FNC 3
    #define SYM2 4
    #define NUMBERS 5
// -----------------

/ { 
    keymap {
        compatible = "zmk,keymap";
                
        // Base alpha layer
        default_layer {
            bindings = <
                // ╭─────────────┬─────────────┬─────────────┬─────────────┬─────────────╮   ╭─────────────┬─────────────┬─────────────┬─────────────┬─────────────╮
                    &kp Q          &kp W         &kp E         &kp R            &kp T          &kp Y         &kp U         &kp I         &kp O         &mt LCMD P 
                    &kp A          &kp S         &kp D         &kp F            &kp G          &kp H         &kp J         &kp K         &kp L         &mt LCTRL ESC
                    &kp Z          &kp X        &kp C          &kp V            &kp B          &kp N         &kp M         &kp COMMA     &kp DOT       &mt LALT BSPC
                // ╰─────────────┴─────────────┴─────────────┼─────────────┼─────────────┤   ├─────────────┼─────────────┼─────────────┴─────────────┴─────────────╯
                                                                &trans      &mt LSHIFT SPACE   &trans   &trans
                //                                           ╰─────────────┴─────────────╯   ╰─────────────┴─────────────╯
            >;
        };

        //frequency symbols
        symbols {
            label = "SYM";
            bindings = <
                // ╭─────────────┬─────────────┬─────────────┬─────────────┬─────────────╮   ╭─────────────┬─────────────┬─────────────┬─────────────┬─────────────╮
                    &kp EXCL       &kp AT        &kp HASH      &kp DLLR      &kp PRCNT		   &kp CARET     &kp AMPS      &kp ASTRK     &kp UNDER     &kp SEMI
                    &kp QUESTION   &kp GRAVE     &kp TILDE   &kp COMMA       &kp SLASH         &kp SQT       &kp DQT       &kp LBRC      &kp LPAR      &kp LBKT
                    &kp PIPE       &kp MINUS     &kp EQUAL     &kp PLUS      &kp BSLH          &kp LT        &kp GT        &kp RBRC      &kp RPAR      &kp RBKT
                // ╰─────────────┴─────────────┴─────────────┼─────────────┼─────────────┤   ├─────────────┼─────────────┼─────────────┴─────────────┴─────────────╯
                                                                &trans        &kp COLON            &trans       &trans
                //                                           ╰─────────────┴─────────────╯   ╰─────────────┴─────────────╯
            >;
        };

         // Function keys with modifiers
        fnc_layer {
            bindings = <
                &kp F1 &kp F2 &kp F3 &kp F4 &kp F5                          &kp F6 &kp F7 &kp F8 &kp F9 &kp F10 
                &sk LALT &sk LGUI &sk LSHIFT &sk LCTRL &kp RALT             &kp F11 &kp F12  &kp PRINTSCREEN &trans &trans
                &bt BT_CLR &none &none &none &bootloader  				    &bt BT_SEL 1 &none &none &none &bootloader 
                                                    &none &none             &none &none  
            >;
		};

        // Low frequency symbols.
        symbols_2_layer {
            bindings = <
                &kp IT_CARET &kp IT_UNDER &kp IT_PND &kp IT_EUR &kp IT_HASH              &none &none &none &none &none 
                &kp IT_BKTK &kp IT_TILDE &kp IT_BSLH &kp IT_PIPE &kp IT_AND             &none &none &none &none &none
                &none &none &none &none &none				                            &none &none &none &none &none
                                                                &none &none             &none &none 
            >;
		};    

        // Used to type regional accents.
        numbers_layer {
            label = "NUMBERS";
            bindings = <
                // ╭─────────────┬─────────────┬─────────────┬─────────────┬─────────────╮   ╭─────────────┬─────────────┬─────────────┬─────────────┬─────────────╮
                    &kp N1        &kp N2         &kp N3        &kp N4        &kp N5            &kp N6        &kp N7        &kp N8        &kp N9        &kp N0          
                    &none          &none         &none         &none         &none             &none         &none         &none         &none         &none
                    &none          &none         &none         &none         &none             &none         &none         &none         &none         &none
                // ╰─────────────┴─────────────┴─────────────┼─────────────┼─────────────┤   ├─────────────┼─────────────┼─────────────┴─────────────┴─────────────╯
                                                              &none         &none             &none         &none
                //                                           ╰─────────────┴─────────────╯   ╰─────────────┴─────────────╯
            >;
		};

    };
};
